{"ast":null,"code":"var _jsxFileName = \"/home/lordadhaar/repos/weatheraAppTest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"Toronto\"\n  });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        await getFormattedWeatherData({ ...query,\n          units\n        }).then(data => {\n          setWeather(data);\n        });\n      } catch (err) {\n        toast.error(\"Please enter a valid city\");\n      }\n    };\n\n    fetchWeather();\n  }, [query, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto rounded-[32px] max-w-screen-md py-[20px] px-[40px] bg-gradient-to-br  h-fit shadow-xl black-400  bg-black/20 backdrop-blur-[32px] max-xs:rounded-none `,\n    children: [/*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"colored\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nJjmf6eIok6f400O4XBxQsh3cSk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","then","data","err","error","hourly","daily"],"sources":["/home/lordadhaar/repos/weatheraAppTest/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/weatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"Toronto\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try{\n        await getFormattedWeatherData({ ...query, units }).then((data) => {\n          setWeather(data);\n        });\n      }\n      catch(err){\n        toast.error(\"Please enter a valid city\")\n      }\n      \n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  return (\n    <div\n      className={`mx-auto rounded-[32px] max-w-screen-md py-[20px] px-[40px] bg-gradient-to-br  h-fit shadow-xl black-400  bg-black/20 backdrop-blur-[32px] max-xs:rounded-none `}\n    >\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title=\"hourly forecast\" items={weather.hourly} />\n          <Forecast title=\"daily forecast\" items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme=\"colored\" newestOnTop={true} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;IAAEM,CAAC,EAAE;EAAL,CAAD,CAAlC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,QAAD,CAAlC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,YAAY;MAC/B,IAAG;QACD,MAAMb,uBAAuB,CAAC,EAAE,GAAGM,KAAL;UAAYG;QAAZ,CAAD,CAAvB,CAA6CK,IAA7C,CAAmDC,IAAD,IAAU;UAChEH,UAAU,CAACG,IAAD,CAAV;QACD,CAFK,CAAN;MAGD,CAJD,CAKA,OAAMC,GAAN,EAAU;QACRZ,KAAK,CAACa,KAAN,CAAY,2BAAZ;MACD;IAEF,CAVD;;IAYAJ,YAAY;EACb,CAdQ,EAcN,CAACP,KAAD,EAAQG,KAAR,CAdM,CAAT;EAgBA,oBACE;IACE,SAAS,EAAG,gKADd;IAAA,wBAGE,QAAC,MAAD;MAAQ,QAAQ,EAAEF,QAAlB;MAA4B,KAAK,EAAEE,KAAnC;MAA0C,QAAQ,EAAEC;IAApD;MAAA;MAAA;MAAA;IAAA,QAHF,EAKGC,OAAO,iBACN;MAAA,wBACE,QAAC,eAAD;QAAiB,OAAO,EAAEA;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,qBAAD;QAAuB,OAAO,EAAEA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,QAAD;QAAU,KAAK,EAAC,iBAAhB;QAAkC,KAAK,EAAEA,OAAO,CAACO;MAAjD;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,QAAD;QAAU,KAAK,EAAC,gBAAhB;QAAiC,KAAK,EAAEP,OAAO,CAACQ;MAAhD;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAeE,QAAC,cAAD;MAAgB,SAAS,EAAE,IAA3B;MAAiC,KAAK,EAAC,SAAvC;MAAiD,WAAW,EAAE;IAA9D;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAxCQd,G;;KAAAA,G;AA0CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}